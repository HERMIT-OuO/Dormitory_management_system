{"remainingRequest":"E:\\ICE\\VUE-ADMIN\\node_modules\\babel-loader\\lib\\index.js!E:\\ICE\\VUE-ADMIN\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\ICE\\VUE-ADMIN\\src\\mock\\d2-mock\\index.js","dependencies":[{"path":"E:\\ICE\\VUE-ADMIN\\src\\mock\\d2-mock\\index.js","mtime":1558363754889},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"E:\\\\ICE\\\\VUE-ADMIN\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport Mock from 'mockjs';\nimport qs from 'qs';\nimport withCredentials from \"./patch/withCredentials\";\n/* 补丁 */\n\nwithCredentials(Mock);\n/* Mock 默认配置 */\n\nMock.setup({\n  timeout: '200-300'\n});\n/* 扩展 [生成器] */\n\nvar Generator = function Generator(prop, template) {\n  var obj = {};\n  obj[prop] = [template];\n  return Mock.mock(obj);\n};\n/* 扩展 [循环] */\n\n\nvar Repeat = function Repeat(num, itemTemplate) {\n  return Generator(\"data|\".concat(num), itemTemplate).data;\n};\n\nvar CustomExtends = {\n  Generator: Generator,\n  Repeat: Repeat,\n  Mock: Mock,\n  Random: Mock.Random\n};\n\nvar extend = function extend(prop, value) {\n  CustomExtends[prop] = value;\n};\n/* 装配配置组 */\n\n\nvar wired = function wired(_ref) {\n  var url = _ref.url,\n      type = _ref.type,\n      body = _ref.body;\n  return _objectSpread({\n    method: type,\n    params: qs.parse(url.split('?').length > 1 ? url.split('?')[1] : ''),\n    body: JSON.parse(body),\n    url: qs.parse(url.split('?')[0])\n  }, CustomExtends);\n};\n\nvar setup = function setup(path, method, handle) {\n  Mock.mock(RegExp(path), method, typeof handle === 'function' ? function (o) {\n    return handle(wired(o));\n  } : handle);\n};\n\nvar load = function load(collection) {\n  collection.map(function (_ref2) {\n    var path = _ref2.path,\n        method = _ref2.method,\n        handle = _ref2.handle;\n\n    if (method === '*') {\n      method = ['get', 'head', 'post', 'put', 'delete', 'connect', 'options', 'trace', 'patch'];\n    }\n\n    if (typeof method === 'string' && method.indexOf('|') > -1) method = method.split('|');\n\n    if (method instanceof Array) {\n      method.map(function (item) {\n        return setup(path, item, handle);\n      });\n    } else {\n      setup(path, method, handle);\n    }\n  });\n};\n\nexport default {\n  setup: setup,\n  load: load,\n  extend: extend\n};",null]}