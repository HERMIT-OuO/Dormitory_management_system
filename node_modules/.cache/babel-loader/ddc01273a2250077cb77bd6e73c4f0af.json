{"remainingRequest":"E:\\ICE\\VUE-ADMIN\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ICE\\VUE-ADMIN\\node_modules\\babel-loader\\lib\\index.js!E:\\ICE\\VUE-ADMIN\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\ICE\\VUE-ADMIN\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\ICE\\VUE-ADMIN\\tools\\vue-filename-injector\\src\\lib\\injector.js!E:\\ICE\\VUE-ADMIN\\src\\pages\\Announcement\\components\\D2Crud\\D2Crud.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\ICE\\VUE-ADMIN\\src\\pages\\Announcement\\components\\D2Crud\\D2Crud.vue","mtime":1559127587449},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\tools\\vue-filename-injector\\src\\lib\\injector.js","mtime":1558363759028}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport D2Crud from '@d2-projects/d2-crud';\nimport dayjs from 'dayjs';\nimport axios from 'axios';\nimport Qs from 'qs';\nimport util from '@/libs/util';\nVue.use(D2Crud);\nexport default {\n  data: function data() {\n    return {\n      columns: [{\n        title: '日期',\n        key: 'date',\n        width: '180',\n        sortable: true\n      }, {\n        title: '发布人',\n        key: 'name',\n        width: '180'\n      }, {\n        title: '内容',\n        key: 'text',\n        width: '1000'\n      }],\n      options: {\n        stripe: true,\n        highlightCurrentRow: true\n      },\n      data: [],\n      addButton: {\n        icon: 'el-icon-plus',\n        size: 'small'\n      },\n      rowHandle: {\n        columnHeader: '编辑',\n        edit: {\n          icon: 'el-icon-edit',\n          text: '编辑',\n          size: 'small'\n        },\n        remove: {\n          icon: 'el-icon-delete',\n          size: 'small',\n          fixed: 'right',\n          confirm: true\n        }\n      },\n      addTemplate: {\n        id: {\n          title: 'ID',\n          value: 3,\n          component: {\n            span: 0\n          }\n        },\n        date: {\n          title: '日期',\n          value: dayjs().format('YYYY-MM-DD'),\n          component: {\n            span: 12\n          }\n        },\n        text: {\n          title: '内容',\n          value: '',\n          component: {\n            span: 24\n          }\n        },\n        name: {\n          title: '发布人',\n          value: util.cookies.get(\"user-name\"),\n          component: {\n            span: 12\n          }\n        }\n      },\n      addRules: {\n        date: [{\n          required: true,\n          message: '请输入日期',\n          trigger: 'blur'\n        }],\n        text: [{\n          required: true,\n          message: '请输入内容',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入发布人',\n          trigger: 'blur'\n        }]\n      },\n      formOptions: {\n        labelWidth: '80px',\n        labelPosition: 'left',\n        saveLoading: false,\n        gutter: 20\n      },\n      mylist: {}\n    };\n  },\n  methods: {\n    handleRowAdd: function handleRowAdd(row, done) {\n      var _this2 = this;\n\n      this.formOptions.saveLoading = true;\n      setTimeout(function () {\n        console.log(row);\n\n        _this2.$message({\n          message: '保存成功',\n          type: 'success'\n        }); //获取当前data长度\n\n\n        var len = Object.keys(_this2.data).length; //写入row\n\n        done({\n          id: len + 1\n        }); //将row压入data\n\n        _this2.data.push(row);\n\n        console.log(_this2.data); //调用函数\n\n        _this2.sendNewRow(row);\n\n        _this2.formOptions.saveLoading = false;\n      }, 300);\n    },\n    handleRowEdit: function handleRowEdit(_ref, done) {\n      var _this3 = this;\n\n      var index = _ref.index,\n          row = _ref.row;\n      this.formOptions.saveLoading = true;\n      setTimeout(function () {\n        //console.log(index)\n        //console.log(row)\n        _this3.$message({\n          message: '编辑成功',\n          type: 'success'\n        });\n\n        done();\n\n        _this3.alterMyRow(row);\n\n        _this3.formOptions.saveLoading = false;\n      }, 300);\n    },\n    handleRowRemove: function handleRowRemove(_ref2, done) {\n      var _this4 = this;\n\n      var index = _ref2.index,\n          row = _ref2.row;\n      setTimeout(function () {\n        console.log(index);\n        console.log(row);\n\n        _this4.$message({\n          message: '删除成功',\n          type: 'success'\n        });\n\n        done();\n\n        _this4.delMyRow(row.id);\n      }, 300);\n    },\n    handleDialogCancel: function handleDialogCancel(done) {\n      this.$message({\n        message: '取消保存',\n        type: 'warning'\n      });\n      done();\n    },\n    handleSelectionChange: function handleSelectionChange(selection) {\n      console.log(selection);\n    },\n    getMyData: function getMyData() {\n      var _this = this;\n\n      axios.get('http://localhost:8080/GetAnn').then(function (response) {\n        // console.log(response)\n        _this.data = response.data; //console.log(Object.keys(_this.data).length)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    sendMyData: function sendMyData() {\n      //获取处理过后的data\n      var _this = this;\n\n      axios.get('http://localhost:8080/RecAnn?data=' + this.data).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    sendNewRow: function sendNewRow(newRow) {\n      //添加新一行时，只发送新行的数据\n      // console.log(newRow)\n      axios.post('http://localhost:8080/AddAnnRow', Qs.stringify(newRow)).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    alterMyRow: function alterMyRow(newRow) {\n      //修改某一行，只发送当前行的数据\n      console.log(newRow);\n      axios.post('http://localhost:8080/AlterAnnRow', Qs.stringify(newRow)).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    delMyRow: function delMyRow(ID) {\n      //删除某一行，获取当前行的ID，\n      axios.post('http://localhost:8080/DelAnnRow', Qs.stringify({\n        id: ID\n      })).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      console.log('删除了ID：' + ID);\n    },\n    addRow: function addRow() {\n      this.$refs.d2Crud.showDialog({\n        mode: 'add'\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getMyData();\n  },\n  updated: function updated() {}\n};",{"version":3,"sources":["D2Crud.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"d2-crud\">\n    <!-- 使用方法请参考文档和示例 -->\n    <!-- 文档： https://d2-projects.github.io/d2-admin-doc/zh/ecosystem-d2-crud/ -->\n    <!-- 示例： https://d2-projects.github.io/d2-admin/#/demo/d2-crud/index -->\n    <d2-crud\n      ref=\"d2Crud\"\n      :columns=\"columns\"\n      :data=\"data\"\n      :options = \"options\"\n      title=\"已发公告\"\n      selection-row\n      index-row\n      add-title=\"添加学生\"\n      :add-template = \"addTemplate\"\n      :edit-template= \"addTemplate\"\n      :rowHandle= \"rowHandle\"\n      :add-rules= \"addRules\"\n      :form-options= \"formOptions\"\n      @row-add= \"handleRowAdd\"\n      @row-edit= \"handleRowEdit\"\n      @row-remove= \"handleRowRemove\"\n      @dialog-cancel= \"handleDialogCancel\"\n      @selection-change= \"handleSelectionChange\">\n      <el-button slot=\"header\"  @click=\"addRow\" style=\"margin-bottom:5px;\" >添加公告</el-button>\n    </d2-crud>\n  </div>\n</template>\n\n\n<script>\nimport Vue from 'vue'\nimport D2Crud from '@d2-projects/d2-crud'\nimport dayjs from 'dayjs'\nimport axios from 'axios'\nimport Qs from 'qs'\nimport util from '@/libs/util'\n\nVue.use(D2Crud)\n\n\nexport default {\n  data:function(){\n    return {\n      columns: [\n        {\n          title: '日期',\n          key: 'date',\n          width: '180',\n          sortable:true,\n        },\n        {\n          title: '发布人',\n          key:'name',\n          width:'180'\n        },\n        {\n          title: '内容',\n          key: 'text',\n          width:'1000'\n        },\n      ],\n      options:{\n        stripe:true,\n        highlightCurrentRow:true\n      },\n      data: [\n        \n      ],\n      addButton: {\n        icon: 'el-icon-plus',\n        size: 'small'\n      },\n      rowHandle: {\n        columnHeader: '编辑',\n        edit: {\n          icon: 'el-icon-edit',\n          text: '编辑',\n          size: 'small'\n        },\n        remove: {\n          icon: 'el-icon-delete',\n          size: 'small',\n          fixed: 'right',\n          confirm: true\n        }\n      },\n      addTemplate: {\n        id:{\n          title:'ID',\n          value: 3 ,\n          component:{\n            span:0\n          } \n        },\n        date: {\n          title: '日期',\n          value: dayjs().format('YYYY-MM-DD'),\n          component: {\n            span: 12\n          }\n        },\n        text: {\n          title: '内容',\n          value: '',\n          component: {\n            span: 24\n          }\n        },\n        name:{\n          title:'发布人',\n          value: util.cookies.get(\"user-name\"),\n          component: {\n            span: 12\n          }\n        }\n      },\n      addRules: {\n        date: [ { required: true, message: '请输入日期', trigger: 'blur' } ],\n        text: [ { required: true, message: '请输入内容', trigger: 'blur' } ],\n        name: [ { required: true, message: '请输入发布人', trigger: 'blur' } ]\n      },\n      formOptions: {\n        labelWidth: '80px',\n        labelPosition: 'left',\n        saveLoading: false,\n        gutter: 20\n      },\n      mylist:{}\n    }\n  },\n  methods: {\n    handleRowAdd (row, done) {\n      this.formOptions.saveLoading = true\n      setTimeout(() => {\n        console.log(row)\n        this.$message({\n          message: '保存成功',\n          type: 'success'\n        });\n        //获取当前data长度\n        var len = Object.keys(this.data).length\n        //写入row\n        done({id:len+1})\n        //将row压入data\n        this.data.push(row)\n        console.log(this.data)\n        //调用函数\n        this.sendNewRow(row)\n        this.formOptions.saveLoading = false\n      }, 300);\n    },\n    handleRowEdit ({index, row}, done) {\n      this.formOptions.saveLoading = true\n      setTimeout(() => {\n        //console.log(index)\n        //console.log(row)\n        this.$message({\n          message: '编辑成功',\n          type: 'success'\n        })\n        done()\n        this.alterMyRow(row)\n        this.formOptions.saveLoading = false\n      }, 300)\n    },\n    handleRowRemove ({index, row}, done) {\n      setTimeout(() => {\n        console.log(index)\n        console.log(row)\n        this.$message({\n          message: '删除成功',\n          type: 'success'\n        })\n        done()\n        this.delMyRow(row.id)\n      }, 300)\n    },\n    handleDialogCancel (done) {\n      this.$message({\n        message: '取消保存',\n        type: 'warning'\n      });\n      done()\n    },\n    handleSelectionChange (selection) {\n      console.log(selection)\n    },\n    getMyData(){\n      var _this = this\n      axios.get('http://localhost:8080/GetAnn')\n        .then(function (response) {\n          // console.log(response)\n          _this.data = response.data\n          //console.log(Object.keys(_this.data).length)\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    },\n    sendMyData(){\n      //获取处理过后的data\n      var _this = this\n      axios.get('http://localhost:8080/RecAnn?data='+this.data)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    },\n    sendNewRow(newRow){\n      //添加新一行时，只发送新行的数据\n      // console.log(newRow)\n      axios.post('http://localhost:8080/AddAnnRow',Qs.stringify(newRow))\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    },\n    alterMyRow(newRow){\n      //修改某一行，只发送当前行的数据\n      console.log(newRow)\n      axios.post('http://localhost:8080/AlterAnnRow',Qs.stringify(newRow))\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n    },\n    delMyRow(ID){\n      //删除某一行，获取当前行的ID，\n      axios.post('http://localhost:8080/DelAnnRow',Qs.stringify({id:ID}))\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n      console.log('删除了ID：'+ID)\n      \n    },\n    addRow(){\n      this.$refs.d2Crud.showDialog({\n        mode: 'add'\n      })\n    }\n  },\n  mounted(){\n    this.getMyData();\n  },\n  updated () {\n    \n  }\n}\n\n</script>\n\n<vue-filename-injector>\nexport default function (Component) {\n  Component.options.__source = \"src/pages/Announcement/components/D2Crud/D2Crud.vue\"\n}\n</vue-filename-injector>\n"],"sourceRoot":"src/pages/Announcement/components/D2Crud"}]}