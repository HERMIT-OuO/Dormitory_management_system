{"remainingRequest":"E:\\ICE\\VUE-ADMIN\\node_modules\\thread-loader\\dist\\cjs.js!E:\\ICE\\VUE-ADMIN\\node_modules\\babel-loader\\lib\\index.js!E:\\ICE\\VUE-ADMIN\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\ICE\\VUE-ADMIN\\src\\components\\d2-container\\components\\mixins\\normal.js","dependencies":[{"path":"E:\\ICE\\VUE-ADMIN\\src\\components\\d2-container\\components\\mixins\\normal.js","mtime":1558363745500},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\ICE\\VUE-ADMIN\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n// 提供滚动方面的功能\n// 非滚动优化模式通用\nimport { throttle } from 'lodash'; // 生成滚动事件的 handler\n\nfunction handleMaker(wait) {\n  var _this = this;\n\n  return throttle(function (e) {\n    _this.$emit('scroll', {\n      x: e.target.scrollLeft,\n      y: e.target.scrollTop\n    });\n  }, wait);\n}\n\nexport default {\n  props: {\n    // 滚动事件节流间隔\n    scrollDelay: {\n      type: Number,\n      required: false,\n      default: 10\n    }\n  },\n  data: function data() {\n    return {\n      handleScroll: null\n    };\n  },\n  watch: {\n    scrollDelay: function scrollDelay(val) {\n      // 移除旧的监听\n      this.removeScrollListener(); // 生成新的 handle 方法\n\n      this.handleScroll = handleMaker.call(this, val); // 添加新的监听\n\n      this.addScrollListener();\n    }\n  },\n  methods: {\n    // 增加滚动事件监听\n    addScrollListener: function addScrollListener() {\n      if (typeof this.handleScroll !== 'function') {\n        // mounted 生命周期内调用这个方法的时候会进入这里的判断\n        this.handleScroll = handleMaker.call(this, this.scrollDelay);\n      } // 添加监听\n\n\n      this.$refs.body.addEventListener('scroll', this.handleScroll);\n    },\n    // 移除滚动事件监听\n    removeScrollListener: function removeScrollListener() {\n      this.$refs.body.removeEventListener('scroll', this.handleScroll);\n    },\n    // 外部调用的方法 返回顶部\n    scrollToTop: function scrollToTop() {\n      var _this2 = this;\n\n      var smoothscroll = function smoothscroll() {\n        var body = _this2.$refs.body;\n        var currentScroll = body.scrollTop;\n\n        if (currentScroll > 0) {\n          window.requestAnimationFrame(smoothscroll);\n          body.scrollTo(0, currentScroll - currentScroll / 5);\n        }\n      };\n\n      smoothscroll();\n    }\n  }\n};",{"version":3,"sources":["E:\\ICE\\VUE-ADMIN\\src\\components\\d2-container\\components\\mixins\\normal.js"],"names":["throttle","handleMaker","wait","e","$emit","x","target","scrollLeft","y","scrollTop","props","scrollDelay","type","Number","required","default","data","handleScroll","watch","val","removeScrollListener","call","addScrollListener","methods","$refs","body","addEventListener","removeEventListener","scrollToTop","smoothscroll","currentScroll","window","requestAnimationFrame","scrollTo"],"mappings":";AAAA;AACA;AAEA,SAASA,QAAT,QAAyB,QAAzB,C,CAEA;;AACA,SAASC,WAAT,CAAsBC,IAAtB,EAA4B;AAAA;;AAC1B,SAAOF,QAAQ,CAAC,UAAAG,CAAC,EAAI;AACnB,IAAA,KAAI,CAACC,KAAL,CAAW,QAAX,EAAqB;AACnBC,MAAAA,CAAC,EAAEF,CAAC,CAACG,MAAF,CAASC,UADO;AAEnBC,MAAAA,CAAC,EAAEL,CAAC,CAACG,MAAF,CAASG;AAFO,KAArB;AAID,GALc,EAKZP,IALY,CAAf;AAMD;;AAED,eAAe;AACbQ,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,WAAW,EAAE;AACXC,MAAAA,IAAI,EAAEC,MADK;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,OAAO,EAAE;AAHE;AAFR,GADM;AASbC,EAAAA,IATa,kBASL;AACN,WAAO;AACLC,MAAAA,YAAY,EAAE;AADT,KAAP;AAGD,GAbY;AAcbC,EAAAA,KAAK,EAAE;AACLP,IAAAA,WADK,uBACQQ,GADR,EACa;AAChB;AACA,WAAKC,oBAAL,GAFgB,CAGhB;;AACA,WAAKH,YAAL,GAAoBhB,WAAW,CAACoB,IAAZ,CAAiB,IAAjB,EAAuBF,GAAvB,CAApB,CAJgB,CAKhB;;AACA,WAAKG,iBAAL;AACD;AARI,GAdM;AAwBbC,EAAAA,OAAO,EAAE;AACP;AACAD,IAAAA,iBAFO,+BAEc;AACnB,UAAI,OAAO,KAAKL,YAAZ,KAA6B,UAAjC,EAA6C;AAC3C;AACA,aAAKA,YAAL,GAAoBhB,WAAW,CAACoB,IAAZ,CAAiB,IAAjB,EAAuB,KAAKV,WAA5B,CAApB;AACD,OAJkB,CAKnB;;;AACA,WAAKa,KAAL,CAAWC,IAAX,CAAgBC,gBAAhB,CAAiC,QAAjC,EAA2C,KAAKT,YAAhD;AACD,KATM;AAUP;AACAG,IAAAA,oBAXO,kCAWiB;AACtB,WAAKI,KAAL,CAAWC,IAAX,CAAgBE,mBAAhB,CAAoC,QAApC,EAA8C,KAAKV,YAAnD;AACD,KAbM;AAcP;AACAW,IAAAA,WAfO,yBAeQ;AAAA;;AACb,UAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,YAAMJ,IAAI,GAAG,MAAI,CAACD,KAAL,CAAWC,IAAxB;AACA,YAAMK,aAAa,GAAGL,IAAI,CAAChB,SAA3B;;AACA,YAAIqB,aAAa,GAAG,CAApB,EAAuB;AACrBC,UAAAA,MAAM,CAACC,qBAAP,CAA6BH,YAA7B;AACAJ,UAAAA,IAAI,CAACQ,QAAL,CAAc,CAAd,EAAiBH,aAAa,GAAIA,aAAa,GAAG,CAAlD;AACD;AACF,OAPD;;AAQAD,MAAAA,YAAY;AACb;AAzBM;AAxBI,CAAf","sourcesContent":["// 提供滚动方面的功能\n// 非滚动优化模式通用\n\nimport { throttle } from 'lodash'\n\n// 生成滚动事件的 handler\nfunction handleMaker (wait) {\n  return throttle(e => {\n    this.$emit('scroll', {\n      x: e.target.scrollLeft,\n      y: e.target.scrollTop\n    })\n  }, wait)\n}\n\nexport default {\n  props: {\n    // 滚动事件节流间隔\n    scrollDelay: {\n      type: Number,\n      required: false,\n      default: 10\n    }\n  },\n  data () {\n    return {\n      handleScroll: null\n    }\n  },\n  watch: {\n    scrollDelay (val) {\n      // 移除旧的监听\n      this.removeScrollListener()\n      // 生成新的 handle 方法\n      this.handleScroll = handleMaker.call(this, val)\n      // 添加新的监听\n      this.addScrollListener()\n    }\n  },\n  methods: {\n    // 增加滚动事件监听\n    addScrollListener () {\n      if (typeof this.handleScroll !== 'function') {\n        // mounted 生命周期内调用这个方法的时候会进入这里的判断\n        this.handleScroll = handleMaker.call(this, this.scrollDelay)\n      }\n      // 添加监听\n      this.$refs.body.addEventListener('scroll', this.handleScroll)\n    },\n    // 移除滚动事件监听\n    removeScrollListener () {\n      this.$refs.body.removeEventListener('scroll', this.handleScroll)\n    },\n    // 外部调用的方法 返回顶部\n    scrollToTop () {\n      const smoothscroll = () => {\n        const body = this.$refs.body\n        const currentScroll = body.scrollTop\n        if (currentScroll > 0) {\n          window.requestAnimationFrame(smoothscroll)\n          body.scrollTo(0, currentScroll - (currentScroll / 5))\n        }\n      }\n      smoothscroll()\n    }\n  }\n}\n"]}]}